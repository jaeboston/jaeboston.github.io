<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Knowledge</title>
    <link>https://jaeboston.github.io/</link>
    <description>Recent content on Tech Knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
<<<<<<< HEAD
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
=======
    <lastBuildDate>Wed, 31 Jul 2019 00:00:00 +0000</lastBuildDate>
>>>>>>> 3f7c9ade9c907a6bb7ec65c128647e746ed3422a
    
	<atom:link href="https://jaeboston.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
<<<<<<< HEAD
      <title>Github howTos</title>
      <link>https://jaeboston.github.io/github/github/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/github/github/</guid>
      <description>HOW TO do pull request How to do pull request</description>
    </item>
    
    <item>
      <title>Azure resources</title>
      <link>https://jaeboston.github.io/cloud/azure/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/cloud/azure/</guid>
      <description> How to use Azure Active Directory to a Web APP </description>
    </item>
    
    <item>
=======
>>>>>>> 3f7c9ade9c907a6bb7ec65c128647e746ed3422a
      <title>Momentum Strategy</title>
      <link>https://jaeboston.github.io/python/quant/momentum/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/quant/momentum/</guid>
      <description>Momentum  Compute the mean of the return series of securities if the mean is greater than zero that&amp;rsquo;s good.
 Use t-test to the mean is staticstically significant or not t-test = mean of x / SE This is called p-value SE(standard error of the mean) = std/sqrt(n)
  let&amp;rsquo;s say t-test was 1.6 which corresponds to 0.053 of p-value for the one-tail hypothsis test. Using alpha = 0.</description>
    </item>
    
    <item>
      <title>Google Cloud Computing courses/study note</title>
      <link>https://jaeboston.github.io/cloud/gcp/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/cloud/gcp/</guid>
      <description>GCP Project  GCP is project based. All Google Cloud Platform resources are associated with a project. Every resources in GCP are organized by a project level. Can&amp;rsquo;t chage project ID  IAM  Policies are a union of those applied on resource itself and those inherited from higher levels in the hierarchy. If a parent policy is less restrictive, it overrides a more restrictive policy applied on the resource.</description>
    </item>
    
    <item>
      <title>How to use git</title>
      <link>https://jaeboston.github.io/github/git/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/github/git/</guid>
<<<<<<< HEAD
      <description>To create a new repository for a new project git init &amp;lt;project-name&amp;gt;  
=======
      <description>git BASIC commands  
To create a new repository for a new project git init &amp;lt;project-name&amp;gt;  
>>>>>>> 3f7c9ade9c907a6bb7ec65c128647e746ed3422a
To create a new repository for an existing project cd &amp;lt;project-name&amp;gt; git init  
To create a copy of an existing repository git clone   touch .gitignore and choose extension not to check in git add git commit -m git push origin master git checkout filename ( before filename was added and bring in the existing copy) git rm (remove added files )</description>
    </item>
    
    <item>
      <title>NLP</title>
      <link>https://jaeboston.github.io/python/nlp/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/nlp/</guid>
      <description> How to to word count using count function words is string
count_dict = dict{} for word in words: count_dict[word] = words.count(word)  NLP  Text Processing Feature Extraction Modeling  </description>
    </item>
    
    <item>
      <title>Course note for MIT 6.006 Introduction to Algorithms</title>
      <link>https://jaeboston.github.io/python/algorithm/introduction_algorithms/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/algorithm/introduction_algorithms/</guid>
      <description>Lecture 6 AVL Trees Height of a node =max(height of left child, height of right child) + 1
AVL Trees: requires heights of left and right children of every node to differ by at most +-1
claim#1: AVL trees are balanced height is always log(n) worst case: is when right subtree has height one more than left for every node. N(h)=min. number of node in a AVL tree of height h</description>
    </item>
    
    <item>
      <title>Algorithm and Datastructure</title>
      <link>https://jaeboston.github.io/python/algorithm/algo/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/algorithm/algo/</guid>
      <description>Data Structure  Lists array is a implementation of a List array has index to indicate place holder; array&amp;rsquo;s insertion could take O(n) worst case because of shifting index to insert array&amp;rsquo;s search could take O(1) because of index  Array vs List  Python has List object which works like dynamic Array similar to ArrayList in Java but List in Python can contain different data types. Python has Array object.</description>
    </item>
    
    <item>
      <title>Zipline installation</title>
      <link>https://jaeboston.github.io/python/env/zipline_installation/</link>
      <pubDate>Thu, 13 Jun 2019 11:53:49 -0700</pubDate>
      
      <guid>https://jaeboston.github.io/python/env/zipline_installation/</guid>
      <description>Windows Install Anaconda 3 See the Anaconda Navigator Environments tab to see all the existing Python environment
See the existing env conda info &amp;ndash;envs
Create a new environment with python 3.5.6 conda create -n py35_zipline python=3.5
Activate the new evn source activate py35_zipline or Use Anaconda Navigator -&amp;gt; Environments then choose &amp;ldquo;Open Terminal&amp;rdquo; option
Use conda to install Zipline (py35_zipline) conda install -c Quantopian zipline
Now need to install cvxpy==1.</description>
    </item>
    
    <item>
      <title>How to unstack dataframe</title>
      <link>https://jaeboston.github.io/python/data_preparation/unstacking_dataframe/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/data_preparation/unstacking_dataframe/</guid>
      <description>Unstacking dataframe The excel file is located in S:/Research/TrendStrategies/PriceDatabase/EQUITY_ETF_SCR.xlsx import pandas as pddf = pd.read_excel(&amp;#34;S:/.../EQUITY_ETF_SCR.xlsx&amp;#34;,sheet_name=&amp;#39;Sheet1&amp;#39;)df.columns Index([&#39;ID&#39;, &#39;DATE&#39;, &#39;COVERAGE_TCS&#39;, &#39;COVERAGE_TCS_ADJ&#39;, &#39;COVERAGE_PCF_REL&#39;, &#39;COVERAGE_PCF_ADJ_REL&#39;, &#39;TCS_Final&#39;, &#39;PCF_Final&#39;, &#39;TCS_ADJ_Final&#39;, &#39;PCF_ADJ_Final&#39;], dtype=&#39;object&#39;)  ID2keep = [&amp;#39;XLC&amp;#39;,&amp;#39;XLY&amp;#39;,&amp;#39;XLP&amp;#39;,&amp;#39;XLE&amp;#39;,&amp;#39;XLF&amp;#39;,&amp;#39;XLV&amp;#39;,&amp;#39;XLI&amp;#39;,&amp;#39;XLB&amp;#39;,&amp;#39;XLRE&amp;#39;,&amp;#39;XLK&amp;#39;,&amp;#39;XLU&amp;#39;]df.head()  .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }    ID DATE COVERAGE_TCS COVERAGE_TCS_ADJ COVERAGE_PCF_REL COVERAGE_PCF_ADJ_REL TCS_Final PCF_Final TCS_ADJ_Final PCF_ADJ_Final     0 IDU 2018-01-31 0.</description>
    </item>
    
    <item>
      <title>Converting Datetime and String</title>
      <link>https://jaeboston.github.io/python/data_preparation/data_wrangling/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/data_preparation/data_wrangling/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Development Env Description</title>
      <link>https://jaeboston.github.io/python/env/development_environment/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jaeboston.github.io/python/env/development_environment/</guid>
      <description>MacBook Anaconda 3 installed on 04-25-2019 See the Anaconda Navigator Environments tab to see all the existing Python environment
The base is installed in \anaconda3 (python 3.7.3) and the others are installed in ~\anaconda\envs
Access Python Jupyter Notebook starting by
Most of python/notebooks are in the pythonWS folder</description>
    </item>
    
    <item>
      <title>How to update this Note site</title>
      <link>https://jaeboston.github.io/github/hugonotes/</link>
      <pubDate>Wed, 20 Mar 2019 11:53:49 -0700</pubDate>
      
      <guid>https://jaeboston.github.io/github/hugonotes/</guid>
      <description>How to update the notes  Go to the hugo repository (websitesWS/hugo.notes) Create/update .md file in the site repository Or using make.ipynb notebook located in the top level of the hugo repository, convert a notebook to .md file Add the following content on the top of the file   --- title: &amp;quot;How to update this Note site&amp;quot; author: &amp;quot;Jae Song&amp;quot; date: 2019-03-20T11:53:49-07:00 description: &amp;quot;How to update this Note site&amp;quot; type: technical_note or page draft: false ---   Update the index.</description>
    </item>
    
  </channel>
</rss>